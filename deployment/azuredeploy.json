{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "bastionVmAdminUsername": {
            "type": "string"
        },
        "bastionVmAdminPassword": {
            "type": "securestring",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "Access can be recovered through portal." 
            }
        },
        "storageAccountName": {
            "type": "string"
        },
        "vaultName": {
            "type": "string"
        },
        "registryName": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {
        "identitiesID": "[resourceId('Microsoft.Resources/deployments','identities')]",
        "networksID": "[resourceId('Microsoft.Resources/deployments','networks')]",
        "storageID": "[resourceId('Microsoft.Resources/deployments','storage')]",
        "vaultID": "[resourceId('Microsoft.Resources/deployments','vault')]",
        "registryID": "[resourceId('Microsoft.Resources/deployments','registry')]"
    },
    "resources": [
        {
            "name": "identities",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/identities.json"
                }
            }
        },
        {
            "comments": "Create virtual network and subnets",
            "name": "networks",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/networks.json"
                }
            }
        },
        {
            "comments": "Create storage account, connect blob to vnet, add private DNS record",
            "name": "storage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('networksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/storage.json"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "vnetName": {
                        "value": "[reference('networks').outputs.vnetName.value]"
                    },
                    "subnetInternalID": {
                        "value": "[reference('networks').outputs.subnetInternalID.value]"
                    }
                }
            }
        },
        {
            "comments": "Create vault, connect to vnet, add private DNS record",
            "name": "vault",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('identitiesID')]",
                "[variables('networksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/vault.json"
                },
                "parameters": {
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "vnetName": {
                        "value": "[reference('networks').outputs.vnetName.value]"
                    },
                    "subnetInternalID": {
                        "value": "[reference('networks').outputs.subnetInternalID.value]"
                    }
                }
            }
        },
        {
            "comments": "Create VM, add bastion connection, store boot diagnostics to blob",
            "name": "bastion",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('networksID')]",
                "[variables('storageID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/bastion.json"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('bastionVmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('bastionVmAdminPassword')]"
                    },
                    "subnetBastionID": {
                        "value": "[reference('networks').outputs.subnetBastionID.value]"
                    },
                    "subnetInternalID": {
                        "value": "[reference('networks').outputs.subnetInternalID.value]"
                    },
                    "blobDiagnosticsUri": {
                        "value": "[reference('storage').outputs.blobDiagnosticsUri.value]"
                    }
                }
            }            
        },
        {
            "comments": "Create registry, connect to vnet, add private DNS record",
            "name": "registry",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('networksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/registry.json"
                },
                "parameters": {
                    "registryName": {
                        "value": "[parameters('registryName')]"
                    },
                    "vnetName": {
                        "value": "[reference('networks').outputs.vnetName.value]"
                    },
                    "subnetInternalID": {
                        "value": "[reference('networks').outputs.subnetInternalID.value]"
                    }
                }
            }
        },
        {
            "comments": "",
            "name": "cluster",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('identitiesID')]",
                "[variables('networksID')]",
                "[variables('vaultID')]",
                "[variables('registryID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/cluster.json"
                },
                "parameters": {
                    "identityClusterID": {
                        "value": "[reference('identities').outputs.identityClusterID.value]"
                    },
                    "subnetClusterID": {
                        "value": "[reference('networks').outputs.subnetClusterID.value]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}