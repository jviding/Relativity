{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string"
        },
        "bastionVmAdminUsername": {
            "type": "string"
        },
        "vaultName": {
            "type": "string"
        },
        "registryName": {
            "type": "string"
        },
        "sshPrivKeyCluster": {
            //"type": "securestring",
            "type": "string",
            "defaultValue": "defaultValue"
        },
        "sshPubKeyCluster": {
            "type": "string",
            "defaultValue": "defaultValue"
        },
        "sshPubKey": {
            "type": "string",
            "defaultValue": "defaultValue" //"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCvzFqaa5DthfIwlaC8A4bc2OZ0q+B927/xlgN3bxmmehpNNxwh3n1m8CLz4fGLyRB9PLJyD8RejD/lF56ZZh6N2mB9LfY7aM9pJcxuR8rUapOcrwHHVWNQlDECNLbD//c8Ga2AlkhUIJgc9/EFFdrPuw5ecGz9uBQ6IcHWwKVSzZUenTXrwjF5Bhb8DFwhYSvy0NWI+V7RaEAqxrPjMFE/Ip+IT0hkz7EIPaeRAnMTh4RjsWCeFTgiIOXwy2KwGBZz0srmYmZYQzV8LCFj31ofnLMgHNPHu4zcSUgjC9apaZx28QfGuLfPC32TIXg/43aqX/jeh1z8rdsYIT7rvByHYAFpCPf+jqwMpjcmdEinTssaxGqV5j3hlhztzbeWYltNeW0g6e/3krS4MNbkWv8XONcJeLug1+QWyD/1rC0DZ7RyReNSs7D/Tn5pe+Dt8Tqol4jJy/6LrndX2rmTlv7EGiqXqS5pl8dQTdokq5sLzVt6ah0LMK9dDMK/1t2vPQ2UaLr0s4d/pr1TlZj8JKz8SsoeExllTOizHuuROjE1hiBScOp5Xu7cNdB8XeGL1LL1fVxJjmgQlfNMEstOAWTZmyJCtA1zGoENUc+wRu1Ae8Rr6lXXI4jRg6bRmN7aLHhQqABYcEomvEYOovPnYe3O2VAog6nfpRUt/qdTwm3foQ== jasu@jasu"
        }
    },
    "functions": [],
    "variables": {
        "deploymentIdentitiesID": "[resourceId('Microsoft.Resources/deployments','identities')]",
        "deploymentNetworksID": "[resourceId('Microsoft.Resources/deployments','networks')]",
        "deploymentVaultID": "[resourceId('Microsoft.Resources/deployments','vault')]",
        "deploymentStorageID": "[resourceId('Microsoft.Resources/deployments','storage')]",
        "deploymentRegistryID": "[resourceId('Microsoft.Resources/deployments','registry')]",
        "deploymentGatewayID": "[resourceId('Microsoft.Resources/deployments','gateway')]"
    },
    "resources": [
        /*{
            // Create user assigned identities
            "name": "identities",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/identities.json"
                }
            }
        },
        {
            // Create virtual network and subnets
            "name": "networks",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/networks.json"
                }
            }
        },
        {
            // Create vault
            // Create private endpoint: vault <-> subnetPrivateInternal
            // Create private DNS record, publish to vnet
            "name": "vault",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentNetworksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/vault.json"
                },
                "parameters": {
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "vnet": {
                        "value": "[reference('networks').outputs.vnet.value]"
                    }
                }
            }
        },
        {
            // Create storage account
            // Create private endpoint: blob storage <-> subnetPrivateInternal
            // Create private DNS record, publish to vnet
            "name": "storage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentNetworksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/storage.json"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "vnet": {
                        "value": "[reference('networks').outputs.vnet.value]"
                    }
                }
            }
        },
        {
            // Create bastion
            // - in subnetPublicBastion
            // - with public IP address
            // Create virtual machine
            // - with network interface
            // - in subnetPrivateInternal
            // - store boot diagnostics to blob storage
            "name": "bastion",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentNetworksID')]",
                "[variables('deploymentStorageID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/bastion.json"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('bastionVmAdminUsername')]"
                    },
                    "vnet": {
                        "value": "[reference('networks').outputs.vnet.value]"
                    },
                    "blobUri": {
                        "value": "[reference('storage').outputs.storageUris.value.blob]"
                    }
                }
            }            
        },
        {
            // Create registry
            // Create private endpoint: registry <-> subnetPrivateInternal
            // Create private DNS record, publish to vnet
            "name": "registry",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentNetworksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/registry.json"
                },
                "parameters": {
                    "registryName": {
                        "value": "[parameters('registryName')]"
                    },
                    "vnet": {
                        "value": "[reference('networks').outputs.vnet.value]"
                    }
                }
            }
        },
        {
            // Create application gateway
            // - in subnetPublicAppGw
            // - with public IP address
            // - with user assigned identity
            "name": "gateway",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentIdentitiesID')]",
                "[variables('deploymentNetworksID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/gateway.json"
                },
                "parameters": {
                    "identityAppGw": {
                        "value": "[reference('identities').outputs.userAssignedIdentities.value.identityAppGw]"
                    },
                    "subnetAppGw": {
                        "value": "[reference('networks').outputs.vnet.value.subnets.subnetPublicAppGw]"
                    }
                }
            }
        },
        {
            // Create managed cluster
            // - with appGw as ingress
            "name": "cluster",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[variables('deploymentIdentitiesID')]",
                "[variables('deploymentNetworksID')]",
                "[variables('deploymentVaultID')]",
                "[variables('deploymentRegistryID')]",
                "[variables('deploymentGatewayID')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "relativePath": "linked-templates/cluster.json"
                },
                "parameters": {
                    "userAssignedIdentities": {
                        "value": "[reference('identities').outputs.userAssignedIdentities.value]"
                    },
                    "appGw": {
                        "value": "[reference('gateway').outputs.appGw.value]"
                    },
                    "subnetCluster": {
                        "value": "[reference('networks').outputs.vnet.value.subnets.subnetPrivateCluster]"
                    },
                    "sshPubKey": {
                        "value": "[parameters('sshPubKey')]"
                    }
                }
            }
        }*/
    ],
    "outputs": {
        "sshPubKeyCluster": {
            "type": "string",
            "value": "[parameters('sshPubKeyCluster')]"
        },
        "sshPubKey": {
            "type": "string",
            "value": "[parameters('sshPubKey')]"
        },
        "else": {
            "type": "string",
            "value": "[parameters('vaultName')]"
        }
    }
}